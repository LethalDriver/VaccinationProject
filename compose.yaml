version: '3.1'

services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test
    volumes:
      - ./sql_dump/vaccinations_dump.sql:/docker-entrypoint-initdb.d/vaccinations_dump.sql

    ports:
      - 5321:5432
    networks:
      mynetwork:
        aliases:
          - db
  vaccinationusersservice:
    build:
      context: "./VaccinationUsersService"
      dockerfile: Dockerfile
    ports:
      - 80:8080
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: test
      DB_USERNAME: postgres
      DB_PASSWORD: root
      SERVER_PORT: 8080
      REMINDERS_MINUTES: 5
      SCAN_DB_MS: 60000
      SPRING_PROFILES_ACTIVE: prod
      AWS_ACCESS_KEY:
      AWS_SECRET_KEY:
      ADMIN_EMAIL: admin@email.com
      ADMIN_PASSWORD: admin
    networks:
      - mynetwork

  notificationservice:
    build:
      context: "./NotificationService"
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    environment:
      FIREBASE_TYPE:
      FIREBASE_PROJECT_ID:
      FIREBASE_PRIVATE_KEY_ID:
      FIREBASE_PRIVATE_KEY:
      FIREBASE_CLIENT_EMAIL:
      FIREBASE_CLIENT_ID:
      FIREBASE_AUTH_URI:
      FIREBASE_TOKEN_URI:
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL:
      FIREBASE_CLIENT_X509_CERT_URL:
      AWS_ACCESS_KEY:
      AWS_SECRET_KEY:
      SERVER_PORT: 8081
    networks:
      - mynetwork


networks:
  mynetwork: