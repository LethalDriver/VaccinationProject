version: '3.1'

services:
  db:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test
    ports:
      - 3306:3306
    networks:
      mynetwork:
        aliases:
          - db

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      mynetwork:
        aliases:
          - zookeeper

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    ports:
      - 29092:29092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    networks:
      mynetwork:
        aliases:
          - kafka
  vaccinationusersservice:
    build:
      context: "/VaccinationUsersService"
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    depends_on:
      - db
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/test
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SERVER_PORT=8082
    networks:
      - mynetwork

  notificationservice:
    build:
      context: "/NotificationService"
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    depends_on:
      - db
      - kafka
    networks:
      - mynetwork

networks:
  mynetwork: